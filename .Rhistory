install.packages("tidyverse")
install.packages("jsonlite")
setwd("~/Desktop/Class/R_Analysis")
setwd("~/Desktop/Class/R_Analysis/01_Demo")
x <- 3
x <- 5
numlist <- c(0,1,2,3,4,5,6,7,8,9)
?read.csv()
demo_table <- read.csv(file = 'demo.csv', check.names = F, stringsAsFactors = F)
View(demo_table)
View(demo_table)
View(demo_table)
library(jsonlite)
library(jsonlite)
View(demo_table)
?fromJson()
?fromJSON
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
demo_table$'Vehilce_Class'
demo_table$"Vehicle_Class"
demo_table$"Vehicle_Class"[2]
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
?subset()
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
View(filter_table2)
?sample()
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
# Numeric
a <- 3
# Character
c <- "This is a string"
d <- "Yet another string"
# Boolean
e <- TRUE
f <- FALSE
g <- T
h <- F
# A vector is a basic unit of data structure in R
# All elements in a vector must be of the same type
disney_characters <- c("mickey", "minnie", "donald", "goofy")
presidents <- c("washington", "adams", "jefferson")
numbers_vector <- c(1, 3, 5, 7, 9, 11)
print(disney_characters)
print(presidents)
### Combine vectors into a single vector
combined_vector <- c(disney_characters, presidents)
combined_vector
### A for-loop
for (x in combined_vector) {
print(x)
}
# Operate over an entire vector en masse
numeric_vector <- 1:length(combined_vector)
squared_vector <- numeric_vector**2
print(combined_vector)
print(numeric_vector)
print(squared_vector)
# An if/else statement
# nchar() returns the number of characters
for (prez in presidents) {
if (nchar(prez) > 5) {
next
}
else {
print(prez)
}
}
library(knitr)
# Numeric
a <- 3
b <- 3.1415
# Character
c <- "This is a string"
d <- "Yet another string"
# Boolean
e <- TRUE
f <- FALSE
g <- T
h <- F
disney_characters <- c("mickey", "minnie", "donald", "goofy")
presidents <- c("washington", "adams", "jefferson")
numbers_vector <- c(1, 3, 5, 7, 9, 11)
print(disney_characters)
print(presidents)
print(numbers_vector)
if (nchar(prez) > 5) {
next
}
else {
print(prez)
}
# An if/else statement
# nchar() returns the number of characters
for (prez in presidents) {
if (nchar(prez) > 5) {
next
}
else {
print(prez)
}
}
# A list, unlike a vector, can contain various data types
random_list <- list("movies"=c("Star Wars", "Titanic", "Avatar"),
"states"=c("California", "Oklahoma", "Texas", "Virginia"),
"coins"=c("penny", "dime", "nickel", "quarter"),
"first_presidents"=presidents,
"nums"=c(1,2,3,4,5),
"bools"=c(T,F,T,T,T,F)
)
# We can use the bracket notation to access an item in a list:
random_list["states"]
# Or use the $ sign
random_list$coins
# Verify type
typeof(random_list)
View(random_list)
View(random_list)
# Part I
students <- c("Jonathan", "Breatrice", "Cory", "Dinah", "Eric", "Felicia")
# Part I
students <- c("Jonathan", "Breatrice", "Cory", "Dinah", "Eric", "Felicia")
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
}
# Create a for loop
for (student in class)
for (student in class)
{
print (student)
}
}
afterfunc <- roll_call(students)
roll_call(students)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
students <-read_csv("students.csv")
students <-read_csv("//Resources/students.csv")
students <-read_csv("Resources/students.csv")
students <-read_csv("..Resources/students.csv")
students <-read_csv("Resources/students.csv")
students <-read_csv("students.csv")
students <-read_csv("students.csv")
students <-read_csv("Resources/students.csv")
students <-read_csv("'/Users/jonathanfuentes/Desktop/1/Activities/06_Evr_Tibble/Resources/students.csv")
students <-read_csv("/Users/jonathanfuentes/Desktop/1/Activities/06_Evr_Tibble/Resources/students.csv")
library(tidyversse)
library(tidiverse)
library(tidyverse)
?mutate()
demo_table <- demo_table %>% mutate(Milage_per_Year=Total_Miles/(2020-Year),IsActive=True) #add colums to original data frame
library(readr)
demo <- read_csv("demo.csv")
View(demo)
demo_table <- demo_table %>% mutate(Milage_per_Year=Total_Miles/(2020-Year),IsActive=True) #add colums to original data frame
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
View(demo_table)
library(readr)
MechaCar_mpg <- read_csv("~/Desktop/Class/MechaCar_Statistical_Analysis/MechaCar_mpg.csv")
View(MechaCar_mpg)
?read.csv
read.csv(MechaCar_mpg)
read.csv("MechaCar_mpg.csv")
library(dplyr)
setwd("~/Desktop/Class/MechaCar_Statistical_Analysis")
